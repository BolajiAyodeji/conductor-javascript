/* tslint:disable */
/* eslint-disable */
/**
 * Conductor API Server
 * Conductor API Server
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    WorkflowDef,
    WorkflowDefFromJSON,
    WorkflowDefFromJSONTyped,
    WorkflowDefToJSON,
} from './WorkflowDef';

/**
 * 
 * @export
 * @interface SubWorkflowParams
 */
export interface SubWorkflowParams {
    /**
     * 
     * @type {string}
     * @memberof SubWorkflowParams
     */
    name: string;
    /**
     * 
     * @type {number}
     * @memberof SubWorkflowParams
     */
    version?: number;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof SubWorkflowParams
     */
    taskToDomain?: { [key: string]: string; };
    /**
     * 
     * @type {WorkflowDef}
     * @memberof SubWorkflowParams
     */
    workflowDefinition?: WorkflowDef;
}

export function SubWorkflowParamsFromJSON(json: any): SubWorkflowParams {
    return SubWorkflowParamsFromJSONTyped(json, false);
}

export function SubWorkflowParamsFromJSONTyped(json: any, ignoreDiscriminator: boolean): SubWorkflowParams {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'version': !exists(json, 'version') ? undefined : json['version'],
        'taskToDomain': !exists(json, 'taskToDomain') ? undefined : json['taskToDomain'],
        'workflowDefinition': !exists(json, 'workflowDefinition') ? undefined : WorkflowDefFromJSON(json['workflowDefinition']),
    };
}

export function SubWorkflowParamsToJSON(value?: SubWorkflowParams | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'version': value.version,
        'taskToDomain': value.taskToDomain,
        'workflowDefinition': WorkflowDefToJSON(value.workflowDefinition),
    };
}

