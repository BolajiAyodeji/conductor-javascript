/* tslint:disable */
/* eslint-disable */
/**
 * Conductor API Server
 * Conductor API Server
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    WorkflowTask,
    WorkflowTaskFromJSON,
    WorkflowTaskFromJSONTyped,
    WorkflowTaskToJSON,
} from './WorkflowTask';

/**
 * 
 * @export
 * @interface WorkflowDef
 */
export interface WorkflowDef {
    /**
     * 
     * @type {string}
     * @memberof WorkflowDef
     */
    ownerApp?: string;
    /**
     * 
     * @type {number}
     * @memberof WorkflowDef
     */
    createTime?: number;
    /**
     * 
     * @type {number}
     * @memberof WorkflowDef
     */
    updateTime?: number;
    /**
     * 
     * @type {string}
     * @memberof WorkflowDef
     */
    createdBy?: string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowDef
     */
    updatedBy?: string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowDef
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowDef
     */
    description?: string;
    /**
     * 
     * @type {number}
     * @memberof WorkflowDef
     */
    version?: number;
    /**
     * 
     * @type {Array<WorkflowTask>}
     * @memberof WorkflowDef
     */
    tasks: Array<WorkflowTask>;
    /**
     * 
     * @type {Array<string>}
     * @memberof WorkflowDef
     */
    inputParameters?: Array<string>;
    /**
     * 
     * @type {{ [key: string]: object; }}
     * @memberof WorkflowDef
     */
    outputParameters?: { [key: string]: object; };
    /**
     * 
     * @type {string}
     * @memberof WorkflowDef
     */
    failureWorkflow?: string;
    /**
     * 
     * @type {number}
     * @memberof WorkflowDef
     */
    schemaVersion?: number;
    /**
     * 
     * @type {boolean}
     * @memberof WorkflowDef
     */
    restartable?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof WorkflowDef
     */
    workflowStatusListenerEnabled?: boolean;
    /**
     * 
     * @type {string}
     * @memberof WorkflowDef
     */
    ownerEmail?: string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowDef
     */
    timeoutPolicy?: WorkflowDefTimeoutPolicyEnum;
    /**
     * 
     * @type {number}
     * @memberof WorkflowDef
     */
    timeoutSeconds: number;
    /**
     * 
     * @type {{ [key: string]: object; }}
     * @memberof WorkflowDef
     */
    variables?: { [key: string]: object; };
    /**
     * 
     * @type {{ [key: string]: object; }}
     * @memberof WorkflowDef
     */
    inputTemplate?: { [key: string]: object; };
}

/**
* @export
* @enum {string}
*/
export enum WorkflowDefTimeoutPolicyEnum {
    TimeOutWf = 'TIME_OUT_WF',
    AlertOnly = 'ALERT_ONLY'
}

export function WorkflowDefFromJSON(json: any): WorkflowDef {
    return WorkflowDefFromJSONTyped(json, false);
}

export function WorkflowDefFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkflowDef {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'ownerApp': !exists(json, 'ownerApp') ? undefined : json['ownerApp'],
        'createTime': !exists(json, 'createTime') ? undefined : json['createTime'],
        'updateTime': !exists(json, 'updateTime') ? undefined : json['updateTime'],
        'createdBy': !exists(json, 'createdBy') ? undefined : json['createdBy'],
        'updatedBy': !exists(json, 'updatedBy') ? undefined : json['updatedBy'],
        'name': json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'version': !exists(json, 'version') ? undefined : json['version'],
        'tasks': ((json['tasks'] as Array<any>).map(WorkflowTaskFromJSON)),
        'inputParameters': !exists(json, 'inputParameters') ? undefined : json['inputParameters'],
        'outputParameters': !exists(json, 'outputParameters') ? undefined : json['outputParameters'],
        'failureWorkflow': !exists(json, 'failureWorkflow') ? undefined : json['failureWorkflow'],
        'schemaVersion': !exists(json, 'schemaVersion') ? undefined : json['schemaVersion'],
        'restartable': !exists(json, 'restartable') ? undefined : json['restartable'],
        'workflowStatusListenerEnabled': !exists(json, 'workflowStatusListenerEnabled') ? undefined : json['workflowStatusListenerEnabled'],
        'ownerEmail': !exists(json, 'ownerEmail') ? undefined : json['ownerEmail'],
        'timeoutPolicy': !exists(json, 'timeoutPolicy') ? undefined : json['timeoutPolicy'],
        'timeoutSeconds': json['timeoutSeconds'],
        'variables': !exists(json, 'variables') ? undefined : json['variables'],
        'inputTemplate': !exists(json, 'inputTemplate') ? undefined : json['inputTemplate'],
    };
}

export function WorkflowDefToJSON(value?: WorkflowDef | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ownerApp': value.ownerApp,
        'createTime': value.createTime,
        'updateTime': value.updateTime,
        'createdBy': value.createdBy,
        'updatedBy': value.updatedBy,
        'name': value.name,
        'description': value.description,
        'version': value.version,
        'tasks': ((value.tasks as Array<any>).map(WorkflowTaskToJSON)),
        'inputParameters': value.inputParameters,
        'outputParameters': value.outputParameters,
        'failureWorkflow': value.failureWorkflow,
        'schemaVersion': value.schemaVersion,
        'restartable': value.restartable,
        'workflowStatusListenerEnabled': value.workflowStatusListenerEnabled,
        'ownerEmail': value.ownerEmail,
        'timeoutPolicy': value.timeoutPolicy,
        'timeoutSeconds': value.timeoutSeconds,
        'variables': value.variables,
        'inputTemplate': value.inputTemplate,
    };
}

