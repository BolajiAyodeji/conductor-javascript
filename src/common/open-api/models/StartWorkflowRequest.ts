/* tslint:disable */
/* eslint-disable */
/**
 * Conductor API Server
 * Conductor API Server
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    WorkflowDef,
    WorkflowDefFromJSON,
    WorkflowDefFromJSONTyped,
    WorkflowDefToJSON,
} from './WorkflowDef';

/**
 * 
 * @export
 * @interface StartWorkflowRequest
 */
export interface StartWorkflowRequest {
    /**
     * 
     * @type {string}
     * @memberof StartWorkflowRequest
     */
    name: string;
    /**
     * 
     * @type {number}
     * @memberof StartWorkflowRequest
     */
    version?: number;
    /**
     * 
     * @type {string}
     * @memberof StartWorkflowRequest
     */
    correlationId?: string;
    /**
     * 
     * @type {{ [key: string]: object; }}
     * @memberof StartWorkflowRequest
     */
    input?: { [key: string]: object; };
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof StartWorkflowRequest
     */
    taskToDomain?: { [key: string]: string; };
    /**
     * 
     * @type {WorkflowDef}
     * @memberof StartWorkflowRequest
     */
    workflowDef?: WorkflowDef;
    /**
     * 
     * @type {string}
     * @memberof StartWorkflowRequest
     */
    externalInputPayloadStoragePath?: string;
    /**
     * 
     * @type {number}
     * @memberof StartWorkflowRequest
     */
    priority?: number;
    /**
     * 
     * @type {string}
     * @memberof StartWorkflowRequest
     */
    createdBy?: string;
}

export function StartWorkflowRequestFromJSON(json: any): StartWorkflowRequest {
    return StartWorkflowRequestFromJSONTyped(json, false);
}

export function StartWorkflowRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): StartWorkflowRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'version': !exists(json, 'version') ? undefined : json['version'],
        'correlationId': !exists(json, 'correlationId') ? undefined : json['correlationId'],
        'input': !exists(json, 'input') ? undefined : json['input'],
        'taskToDomain': !exists(json, 'taskToDomain') ? undefined : json['taskToDomain'],
        'workflowDef': !exists(json, 'workflowDef') ? undefined : WorkflowDefFromJSON(json['workflowDef']),
        'externalInputPayloadStoragePath': !exists(json, 'externalInputPayloadStoragePath') ? undefined : json['externalInputPayloadStoragePath'],
        'priority': !exists(json, 'priority') ? undefined : json['priority'],
        'createdBy': !exists(json, 'createdBy') ? undefined : json['createdBy'],
    };
}

export function StartWorkflowRequestToJSON(value?: StartWorkflowRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'version': value.version,
        'correlationId': value.correlationId,
        'input': value.input,
        'taskToDomain': value.taskToDomain,
        'workflowDef': WorkflowDefToJSON(value.workflowDef),
        'externalInputPayloadStoragePath': value.externalInputPayloadStoragePath,
        'priority': value.priority,
        'createdBy': value.createdBy,
    };
}

