/* tslint:disable */
/* eslint-disable */
/**
 * Conductor API Server
 * Conductor API Server
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpsertUserRequest
 */
export interface UpsertUserRequest {
    /**
     * User's full name
     * @type {string}
     * @memberof UpsertUserRequest
     */
    name: string;
    /**
     * 
     * @type {Set<string>}
     * @memberof UpsertUserRequest
     */
    roles?: UpsertUserRequestRolesEnum;
    /**
     * Ids of the groups this user belongs to
     * @type {Set<string>}
     * @memberof UpsertUserRequest
     */
    groups?: Set<string>;
}

/**
* @export
* @enum {string}
*/
export enum UpsertUserRequestRolesEnum {
    Admin = 'ADMIN',
    User = 'USER',
    Worker = 'WORKER',
    MetadataManager = 'METADATA_MANAGER',
    WorkflowManager = 'WORKFLOW_MANAGER'
}

export function UpsertUserRequestFromJSON(json: any): UpsertUserRequest {
    return UpsertUserRequestFromJSONTyped(json, false);
}

export function UpsertUserRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpsertUserRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'roles': !exists(json, 'roles') ? undefined : json['roles'],
        'groups': !exists(json, 'groups') ? undefined : json['groups'],
    };
}

export function UpsertUserRequestToJSON(value?: UpsertUserRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'roles': value.roles,
        'groups': value.groups,
    };
}

