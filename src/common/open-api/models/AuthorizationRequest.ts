/* tslint:disable */
/* eslint-disable */
/**
 * Conductor API Server
 * Conductor API Server
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    SubjectRef,
    SubjectRefFromJSON,
    SubjectRefFromJSONTyped,
    SubjectRefToJSON,
} from './SubjectRef';
import {
    TargetRef,
    TargetRefFromJSON,
    TargetRefFromJSONTyped,
    TargetRefToJSON,
} from './TargetRef';

/**
 * 
 * @export
 * @interface AuthorizationRequest
 */
export interface AuthorizationRequest {
    /**
     * 
     * @type {SubjectRef}
     * @memberof AuthorizationRequest
     */
    subject: SubjectRef;
    /**
     * 
     * @type {TargetRef}
     * @memberof AuthorizationRequest
     */
    target: TargetRef;
    /**
     * The set of access which is granted or removed
     * @type {Set<string>}
     * @memberof AuthorizationRequest
     */
    access: Set<AuthorizationRequestAccessEnum>;
}

/**
* @export
* @enum {string}
*/
export enum AuthorizationRequestAccessEnum {
    Create = 'CREATE',
    Read = 'READ',
    Update = 'UPDATE',
    Delete = 'DELETE',
    Execute = 'EXECUTE'
}

export function AuthorizationRequestFromJSON(json: any): AuthorizationRequest {
    return AuthorizationRequestFromJSONTyped(json, false);
}

export function AuthorizationRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuthorizationRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'subject': SubjectRefFromJSON(json['subject']),
        'target': TargetRefFromJSON(json['target']),
        'access': json['access'],
    };
}

export function AuthorizationRequestToJSON(value?: AuthorizationRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'subject': SubjectRefToJSON(value.subject),
        'target': TargetRefToJSON(value.target),
        'access': value.access,
    };
}

