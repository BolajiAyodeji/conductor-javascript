/* tslint:disable */
/* eslint-disable */
/**
 * Conductor API Server
 * Conductor API Server
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TaskDef
 */
export interface TaskDef {
    /**
     * 
     * @type {string}
     * @memberof TaskDef
     */
    ownerApp?: string;
    /**
     * 
     * @type {number}
     * @memberof TaskDef
     */
    createTime?: number;
    /**
     * 
     * @type {number}
     * @memberof TaskDef
     */
    updateTime?: number;
    /**
     * 
     * @type {string}
     * @memberof TaskDef
     */
    createdBy?: string;
    /**
     * 
     * @type {string}
     * @memberof TaskDef
     */
    updatedBy?: string;
    /**
     * 
     * @type {string}
     * @memberof TaskDef
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof TaskDef
     */
    description?: string;
    /**
     * 
     * @type {number}
     * @memberof TaskDef
     */
    retryCount?: number;
    /**
     * 
     * @type {number}
     * @memberof TaskDef
     */
    timeoutSeconds: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof TaskDef
     */
    inputKeys?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof TaskDef
     */
    outputKeys?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof TaskDef
     */
    timeoutPolicy?: TaskDefTimeoutPolicyEnum;
    /**
     * 
     * @type {string}
     * @memberof TaskDef
     */
    retryLogic?: TaskDefRetryLogicEnum;
    /**
     * 
     * @type {number}
     * @memberof TaskDef
     */
    retryDelaySeconds?: number;
    /**
     * 
     * @type {number}
     * @memberof TaskDef
     */
    responseTimeoutSeconds?: number;
    /**
     * 
     * @type {number}
     * @memberof TaskDef
     */
    concurrentExecLimit?: number;
    /**
     * 
     * @type {{ [key: string]: object; }}
     * @memberof TaskDef
     */
    inputTemplate?: { [key: string]: object; };
    /**
     * 
     * @type {number}
     * @memberof TaskDef
     */
    rateLimitPerFrequency?: number;
    /**
     * 
     * @type {number}
     * @memberof TaskDef
     */
    rateLimitFrequencyInSeconds?: number;
    /**
     * 
     * @type {string}
     * @memberof TaskDef
     */
    isolationGroupId?: string;
    /**
     * 
     * @type {string}
     * @memberof TaskDef
     */
    executionNameSpace?: string;
    /**
     * 
     * @type {string}
     * @memberof TaskDef
     */
    ownerEmail?: string;
    /**
     * 
     * @type {number}
     * @memberof TaskDef
     */
    pollTimeoutSeconds?: number;
    /**
     * 
     * @type {number}
     * @memberof TaskDef
     */
    backoffScaleFactor?: number;
}

/**
* @export
* @enum {string}
*/
export enum TaskDefTimeoutPolicyEnum {
    Retry = 'RETRY',
    TimeOutWf = 'TIME_OUT_WF',
    AlertOnly = 'ALERT_ONLY'
}/**
* @export
* @enum {string}
*/
export enum TaskDefRetryLogicEnum {
    Fixed = 'FIXED',
    ExponentialBackoff = 'EXPONENTIAL_BACKOFF',
    LinearBackoff = 'LINEAR_BACKOFF'
}

export function TaskDefFromJSON(json: any): TaskDef {
    return TaskDefFromJSONTyped(json, false);
}

export function TaskDefFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaskDef {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'ownerApp': !exists(json, 'ownerApp') ? undefined : json['ownerApp'],
        'createTime': !exists(json, 'createTime') ? undefined : json['createTime'],
        'updateTime': !exists(json, 'updateTime') ? undefined : json['updateTime'],
        'createdBy': !exists(json, 'createdBy') ? undefined : json['createdBy'],
        'updatedBy': !exists(json, 'updatedBy') ? undefined : json['updatedBy'],
        'name': json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'retryCount': !exists(json, 'retryCount') ? undefined : json['retryCount'],
        'timeoutSeconds': json['timeoutSeconds'],
        'inputKeys': !exists(json, 'inputKeys') ? undefined : json['inputKeys'],
        'outputKeys': !exists(json, 'outputKeys') ? undefined : json['outputKeys'],
        'timeoutPolicy': !exists(json, 'timeoutPolicy') ? undefined : json['timeoutPolicy'],
        'retryLogic': !exists(json, 'retryLogic') ? undefined : json['retryLogic'],
        'retryDelaySeconds': !exists(json, 'retryDelaySeconds') ? undefined : json['retryDelaySeconds'],
        'responseTimeoutSeconds': !exists(json, 'responseTimeoutSeconds') ? undefined : json['responseTimeoutSeconds'],
        'concurrentExecLimit': !exists(json, 'concurrentExecLimit') ? undefined : json['concurrentExecLimit'],
        'inputTemplate': !exists(json, 'inputTemplate') ? undefined : json['inputTemplate'],
        'rateLimitPerFrequency': !exists(json, 'rateLimitPerFrequency') ? undefined : json['rateLimitPerFrequency'],
        'rateLimitFrequencyInSeconds': !exists(json, 'rateLimitFrequencyInSeconds') ? undefined : json['rateLimitFrequencyInSeconds'],
        'isolationGroupId': !exists(json, 'isolationGroupId') ? undefined : json['isolationGroupId'],
        'executionNameSpace': !exists(json, 'executionNameSpace') ? undefined : json['executionNameSpace'],
        'ownerEmail': !exists(json, 'ownerEmail') ? undefined : json['ownerEmail'],
        'pollTimeoutSeconds': !exists(json, 'pollTimeoutSeconds') ? undefined : json['pollTimeoutSeconds'],
        'backoffScaleFactor': !exists(json, 'backoffScaleFactor') ? undefined : json['backoffScaleFactor'],
    };
}

export function TaskDefToJSON(value?: TaskDef | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ownerApp': value.ownerApp,
        'createTime': value.createTime,
        'updateTime': value.updateTime,
        'createdBy': value.createdBy,
        'updatedBy': value.updatedBy,
        'name': value.name,
        'description': value.description,
        'retryCount': value.retryCount,
        'timeoutSeconds': value.timeoutSeconds,
        'inputKeys': value.inputKeys,
        'outputKeys': value.outputKeys,
        'timeoutPolicy': value.timeoutPolicy,
        'retryLogic': value.retryLogic,
        'retryDelaySeconds': value.retryDelaySeconds,
        'responseTimeoutSeconds': value.responseTimeoutSeconds,
        'concurrentExecLimit': value.concurrentExecLimit,
        'inputTemplate': value.inputTemplate,
        'rateLimitPerFrequency': value.rateLimitPerFrequency,
        'rateLimitFrequencyInSeconds': value.rateLimitFrequencyInSeconds,
        'isolationGroupId': value.isolationGroupId,
        'executionNameSpace': value.executionNameSpace,
        'ownerEmail': value.ownerEmail,
        'pollTimeoutSeconds': value.pollTimeoutSeconds,
        'backoffScaleFactor': value.backoffScaleFactor,
    };
}

